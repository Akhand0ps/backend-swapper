// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
  binaryTargets = ["native","windows"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  taughtSessios Session[] @relation("TaughtSessions")
  learntSessions Session[] @relation("LearntSessions")
  

  givenFeedback Feedback[] @relation("GivenFeedback")
  receivedFeedback Feedback[] @relation("ReceivedFeedback")
}

model Session{
  id String  @id      @default(cuid())
  teacherId String
  learnerId String
  subject String
  startTime DateTime
  endTime DateTime
  videoUrl String?
  status SessionStatus @default(SCHEDULED)
  createdAt DateTime @default(now())

  teacher User @relation("TaughtSessions",fields:[teacherId],references:[id])
  learner User @relation("LearntSessions",fields:[learnerId],references:[id])
  feedbacks Feedback[]
}

enum SessionStatus{
  SCHEDULED
  COMPLETED
  CANCELLED
}

model Feedback{
  id String @id @default(cuid())
  sessionId String
  fromUserId String
  toUserId String
  rating Int
  comment String
  createdAt DateTime @default(now())

  session Session @relation(fields:[sessionId],references:[id])
  fromUser User @relation("GivenFeedback", fields: [fromUserId], references: [id])
  toUser User @relation("ReceivedFeedback", fields: [toUserId], references: [id])

}